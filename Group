package lesson.three.ht;

import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Scanner;


public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Student student1 = new Student(Gender.Male, "Sergey", "Bahchidgi", 111, "GroupA");
		Student student2 = new Student(Gender.Female, "Anastasiya", "Sayapina", 112, "GroupA");
		Student student3 = new Student(Gender.Male, "Anton", "Sykorskiy", 113, "GroupA");
		Student student4 = new Student(Gender.Female, "Anna", "Botnar", 114, "GroupA");
		Student student5 = new Student(Gender.Female, "Ludmila", "Lisova", 115, "GroupA");
		Student student6 = new Student(Gender.Male, "Volodymyr", "Bojchenko", 116, "GroupA");
		Student student7 = new Student(Gender.Female, "Miroslava", "Lubota", 117, "GroupA");
		Student student8 = new Student(Gender.Male, "Andriy", "Bashtov", 118, "GroupA");
		Student student9 = new Student(Gender.Female, "Elena", "Yasnova", 119, "GroupA");
		Student student10 = new Student(Gender.Male, "Mikhail", "Krasnov", 120, "GroupA");
		Student student12 = new Student(Gender.Male, "Mikhail", "Krasnov", 120, "GroupA");
		Student student11 = AddStudent.ScannerStudents();
//Student student11 = new Student(Gender.Male, "Leonid", "Mozgovoy", 121, "GroupA");

		Group group1 = new Group("GroupA", null);
		
		
		populateStudents(group1, student1, student2, student3, student4, student5, student6, student7, student8, student9, student10);
		
		
		int indexOf = group1.getStudens().indexOf(student8);
        group1.getStudens().remove(indexOf);
        group1.getStudens().remove(student7);

//		try {
//			group1.addStudent(student1);
//			group1.addStudent(student2);
//			group1.addStudent(student3);
//			group1.addStudent(student4);
//			group1.addStudent(student5);
//			group1.addStudent(student6);
//			group1.addStudent(student7);
//			group1.addStudent(student8);
//		//	group1.addStudent(student9);
//			group1.addStudent(student12);
//			
			boolean eqst =  group1.equalStudents(student10);
			System.out.println("The same student as student #10 " + eqst);
			
			boolean eqstf = group1.equalStudents(student9);
			System.out.println("The same tudent as student #9 " + eqstf);

//		} catch (GroupOverflowException e) {
//			System.out.println(e.getMessage());
//		}

		try {
			group1.searchStudentByLastName(student10.getLastName());
		} catch (StudentNotFoundException e) {
			System.out.println(e.getMessage());
		}

//		try {
//			group1.addStudent(student10);
//		} catch (GroupOverflowException e) {
//			System.out.println(e.getMessage());
//		}

		try {
			group1.searchStudentByLastName(student10.getLastName());
			group1.searchStudentByLastName(student11.getLastName());
		} catch (StudentNotFoundException e) {
			System.out.println(e.getMessage());
		}

//		try {
//			group1.addStudent(student11);
//		} catch (GroupOverflowException e) {
//			System.out.println(e.getMessage());
//		}

//		group1.removeStudentByID(119);

//		try {
//			group1.addStudent(student11);
//		} catch (GroupOverflowException e) {
//			System.out.println(e.getMessage());
//		}
		try {
			group1.searchStudentByLastName(student11.getLastName());
		} catch (StudentNotFoundException e) {
			System.out.println(e.getMessage());
		}

		Student[] students = new Student[] { student1, student2, student3, student4, student5, student6, student7,
				student8, student9 };
		Arrays.sort(students, Comparator.nullsFirst(new SortStudentsByLastName()));
		for (Student student : students) {
			System.out.println(student);
		}

		GroupFileStorage gfs = new GroupFileStorage();

		try {
			gfs.saveGroupToCSV(group1);
		} catch (IOException e) {
			e.printStackTrace();
		}
		System.out.println();

		File fileFrom = new File("G:\\Programmin\\Prog.Java\\ModuleTwo\\GroupA.csv");
		Group group2 = new Group();
		try {
			group2 = gfs.loadGroupFromCSV(fileFrom);
		} catch (IOException e) {
			e.printStackTrace();
		}
		System.out.println();

		File search = gfs.findFileByGroupName("GroupA.csv", new File("G:\\Programmin\\Prog.Java\\ModuleTwo"));

		
		
		
	}

	private static void populateStudents(Group group1, Student student1, Student student2, Student student3,
			Student student4, Student student5, Student student6, Student student7, Student student8, Student student9,
			Student student10) {
		boolean b = group1.equals(student10);
        System.out.println(b);
		
	}
}
